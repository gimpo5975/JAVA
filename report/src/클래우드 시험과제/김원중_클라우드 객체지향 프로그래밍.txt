과정명 : 클라우드 데브옵스 프론트앤드&백앤드 자바(JAVA) 풀스택 개발자 취업캠프
과목명 : 클라우드 객체지향 프로그래밍

성명 : 김원중


1. 변수에 대한 설명 중 맞는 것에 O표, 틀린 것에 X표 하세요.
   ① 변수는 하나의 값만 저장할 수 있다. (  0   )
   ② 변수는 선언 시에 사용한 타입의 값만 저장할 수 있다. (x   )
   ③ 변수는 변수가 선언된 중괄호 { } 안에서만 사용 가능하다. ( 0    )
   ④ 변수는 초기값이 저장되지 않은 상태에서 읽을 수 있다. (  x  )

2. 다음 실행 결과처럼 출력되도록 ( ) 안을 완성하시오.
 <실행 결과>
x:3, y:5
x:5 , y:3

	  public class VariableExam {

		public static void main(String[] args) {
			int x = 3;
			int y = 5;
			System.out.println("x:" + x + ", y:" + y);  //x:3, y:5
		
			int temp = x;
			( y  )  =  (  temp   );
			( x  )  =  (  y   );
			System.out.println("x:" + x + ", y:" + y); // x:5 , y:3
		}
	}


 정답 :( ①          ②              ③             ④              )

3. 다음 코드를 실행했을 때출려되는 내용은 무엇인가요?
  정답 : (              출발           )

   boolean stop = false;
   if(stop) {
	System.out.println("멈춤"); 
   }else {
	System.out.println("출발"); 
   }


4. 두 실수를 덧셈 연산하고 소수점 이하 자리를 버리려고 합니다. (      ) 안에 들어갈 코드를
   작성하세요.
   정답 :  (                )

   double var1 = 3.5;
   double var2 = 2.7;
   int result = ( int      )(var1 + var2);


5. 다음의 실행 결과를 쓰시오.
   결과 : (        합격           )

   int score = 75;
   String result = (score >= 60) ? "합격" : "불합격";
   System.out.println(result); 
6. 다음은 1 ~ 5까지의 합을 구하는 프로그램입니다. ()안에 알맞은 명령어를 
   작성하여 프로그램을 완성하세요.
  정답 :( ①  int i=0;        ②  i<5;            ③ i++            ④   sum           )

  int sum = 0;
  
  for((   ①     ) ;(    ②    );(   ③    )){
     
      (  ④   )  += i;
  }
  System.out.println("합계 : " + sum); 



7. 다음 () 안에 알맞은 명령어를 입력하여 프로그램을 완성하세요.
	(      ①        ) classExam;

	class Student { // 클래스 생성
		// 필드(=멤버변수, 인스턴스 변수)
		int hakbun;
		String name;

		// 생성자
		Student() {
			hakbun = 123;
			name = "홍길동";
		}
	
		// 메서드
		void study(int number) {   //int number은 지역변수
			System.out.println(number + "명이 도서관에 있다.");
			System.out.println(name + "함께다");
			System.out.println(number + "모두 열심히 공부하고 있다.");
		}
	}

// ==
	public class FieldExam01 {

		public static void main(String[] args) {
			// 클래스로 객체 생성
			(       ②        ) std = (    ③    ) (    ④        );

			// 필드 값 출력
			System.out.println("학번 : " + std.hakbun);
			System.out.println("이름 : " + std.name);

			// 메서드 호출
			std.study(3);
		}
	}

정답 :( ①package                 ②  Student             ③   new           ④ Student()             )


8. 다음 ()안에 알맞은 결과를 쓰세요.
		String str01 = new String("안녕!!");
		String str02 = "안녕!!";
		String str03 = "안녕!!";
		String str04 = new String("안녕!!");

		System.out.println("각 참조변수가 담고 있는 주소값이 같은지 비교(==)");
		System.out.println(str01 == str02);    // ① 
		System.out.println(str02 == str03);    // ②
		System.out.println();

		System.out.println("참조변수가 담고 있는 내용 비교 equals()");
		System.out.println(str01.equals(str02));  // ③
		System.out.println(str02.equals(str03));  // ④

정답 :( ①false                 ②true               ③ true             ④   true           )

9. 다음 설명에 알맞은 접근지정자를 쓰세요.

      (  ①               ) : 모든 클래스 사용 가능
      protected             : 동일 패키지의 모든 클래스 , 다른 패키지의 자식 클래스
      default(또는 package) : 동일 패키지의 모든 클래스에서 사용 가능
     (  ②              )   : 자신의 클래스 내부에서만 사용(동일 클래스 에서 사용 가능)

정답 :( ①      public             ②   private             )

10.  다음은 상속관계를 나타냅니다. ( ) 안에 알맞은 용어를 쓰세요.
			public	class OverrideA {
				int m = 3;
				static int k = 7;
			
				// 인스턴스 메서드
				void show() {
					System.out.println("A클래스");
				}
			
				// 정적 메서드
				static void showStatic() {
					System.out.println("A클래스의 정정 필드");
				}
			}
			
			public class OverrideB (   ①                 ) OverrideA {
				int n = 4;
				static int k = 10;
			
				// 인스턴스 메서드 - 재정의(오버라이드됨)
				@(  ②              )
				void show() {
					System.out.println("B클래스");
				}
			
				// 정적 메서드 - 오버라이드 안됨
				static void showStatic() {
					System.out.println("B클래스의 정정 필드");
				}
			}

정답 :( ①      extends          ②     override           )

11.  다음을 완성하시오.
 1) Vip 클래스는 Customer 클래스를 상속 받는다.
 2) RATIO와 DISCOUNT_RATE 는 상수이다.
public class Vip (     ①                     ) {
	//10% 할인,  포인트를 0.5%
	(   ②              ) double RATIO = 0.005; //상수
	(   ②                   ) double DISCOUNT_RATE = 0.1;

	//final double test = 5.5;
	public Vip(String cid, String name,Grade grade) {
		super(cid, name, grade, RATIO, DISCOUNT_RATE);
	}	
}

정답 :( ①        extends Customer                   ② static final                          )

12. 다음을 완성하시오.
 1) Bird는 Countable 을 구현한다.
public class Bird  (  ①                     ){
    String name;
    
    public Bird(String name) {
    	this.name = name;
    }
	
	@Override
	public void count() {
		System.out.println(name + "가 2마리 있다.");
		
	}
	void fly() {
		System.out.println("2마리 " + name + "가 날아간다");
	}

}

정답 :( ①    implement                            ②     ??                   )


13. 다음 코드는  ArithmethicException 예외가 발생하며, 예외가 발생하거나 발생하지 않거나
모두 '즐거운 시간'이라는 메시지를 출력하도록 환성하시오.
          
	  (  ①  try         )	{
			System.out.println(3/0);
			
			
		} (  ②          catch             ){
			System.out.println("숫자는 0으로 나눌 수 없습니다.");
		} (  ③                           ){
			System.out.println("즐거운 시간");
		}
	
정답 :( ① try           ②   catch                       ③finally                 )

14. 자막 Thread를 생성하고 Thread를 실행하시오.
public class SubtitleThread extends Thread{
				//자막을 처리할 클래스
				
				@Override
				public void run() {
					//자막으로 처리할 내용, 멀티 쓰레드에서 실행할 내용
					String[] strSubtitleArray = {"자막1", "자막2","자막3","자막4", "자막5"};
					
					try {
						Thread.sleep(100); 
					} catch (InterruptedException e) {
							e.printStackTrace();
					} 
										
					//#2-2. 자막 실행
					for(int i=0; i<strSubtitleArray.length; i++) {
						System.out.print(strSubtitleArray[i] + " ");
						try {
							Thread.sleep(500); //1000 - 1초,  0.5초 동안 잠시 멈춤
						} catch (InterruptedException e) {
								System.out.println("예외 발생");
						}			
					}
					
				}
				
			}

			-------------------------------------------------------
			public class CreateAndStartThreadExam01{
				public static void main(String[] args){
				
					//#1. 메인쓰레드 부분 
					System.out.println("메인 쓰레드 실행....");
					System.out.println("즐거운 시간....");
					
					//#2.자막 쓰레드 생성
					(  ①                                                       )		
					//#2-1. 자막 쓰레드 실행
					(  ②                                               )				
				}
			}

정답 :( ①          Thread SubtitleThread = new Thread()                      ② SubtitleThread.start()                          )

15.  다음 코드를 완성하시오.
	 public abstract class Animal{
			abstract void cry();
		}

	
	   public class Dog extends Animal{
			
			@override
			void cry(){
				System.out.println("멍멍");
			}
		}

	     public class Cat extends Animal{
			
			@override
			void cry(){
				System.out.println("멍멍");
			}
		}


	  public class AnimalMain{
           public static void main(String[] args){
		( ①            ) aniDog = { new Dog(), new Cat()};

		if(  ②                          ){ 
		   (  ③                        )
		     childDog.cry();	//멍멍
		}
		
	   }
	}
정답 :( ①   Animal         ②  Animal instance of Dog                        ③  Dog childDog = (Dog)aniDog               )



